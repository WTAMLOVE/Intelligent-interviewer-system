"""add interview tables

Revision ID: ab12cd34ef56
Revises: 0a50d011ee13
Create Date: 2025-09-19 01:30:00.000000

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ab12cd34ef56"
down_revision = "0a50d011ee13"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "interviews",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("job_requirement_id", sa.Integer(), nullable=False),
        sa.Column("interviewer_id", sa.Integer(), nullable=False),
        sa.Column("interviewee_id", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(length=32), nullable=False),
        sa.Column("duration_minutes", sa.Integer(), nullable=True),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["interviewer_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["interviewee_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["job_requirement_id"],
            ["job_requirements.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "interview_questions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("interview_id", sa.Integer(), nullable=False),
        sa.Column("question_text", sa.Text(), nullable=False),
        sa.Column("question_type", sa.String(length=32), nullable=False),
        sa.Column("options", sa.JSON(), nullable=True),
        sa.Column("reference_answer", sa.Text(), nullable=True),
        sa.Column("score", sa.Integer(), nullable=True),
        sa.Column("order_index", sa.Integer(), nullable=True),
        sa.Column("candidate_answer", sa.Text(), nullable=True),
        sa.Column("actual_score", sa.Integer(), nullable=True),
        sa.Column("comments", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["interview_id"],
            ["interviews.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "interview_evaluations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("interview_id", sa.Integer(), nullable=False),
        sa.Column("evaluator_id", sa.Integer(), nullable=False),
        sa.Column("total_score", sa.Integer(), nullable=False),
        sa.Column("max_score", sa.Integer(), nullable=False),
        sa.Column("overall_comments", sa.Text(), nullable=True),
        sa.Column("skill_ratings", sa.JSON(), nullable=True),
        sa.Column("recommendations", sa.Text(), nullable=True),
        sa.Column("is_passed", sa.Boolean(), nullable=False),
        sa.Column("decision_reason", sa.Text(), nullable=True),
        sa.Column("evaluated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["evaluator_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["interview_id"],
            ["interviews.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("interview_evaluations")
    op.drop_table("interview_questions")
    op.drop_table("interviews")
    # ### end Alembic commands ###
